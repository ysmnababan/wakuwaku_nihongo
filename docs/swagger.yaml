definitions:
  example_feat.UserCreateRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  example_feat.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  example_feat.UserLoginResponse:
    properties:
      token:
        type: string
    type: object
  example_feat.UserResponse:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
  response.Meta:
    properties:
      detail: {}
      message:
        default: "true"
        type: string
      status_code:
        type: integer
      success:
        type: boolean
    type: object
  response.Success:
    properties:
      code:
        type: integer
      response:
        $ref: '#/definitions/response.successResponse'
    type: object
  response.emptyData:
    type: object
  response.errorResponse:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/response.emptyData'
        description: show default empty object if error occur
      error:
        type: string
      meta:
        $ref: '#/definitions/response.Meta'
    type: object
  response.successResponse:
    properties:
      data: {}
      meta:
        $ref: '#/definitions/response.Meta'
    type: object
info:
  contact: {}
  description: This is a doc for wakuwaku_nihongo-Project
  title: wakuwaku_nihongo-Project
  version: 0.0.1
paths:
  /api/v1/users:
    get:
      description: Get list of User
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Success'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/example_feat.UserResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Get List of User
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create new User
      parameters:
      - description: Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/example_feat.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Success'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Create User
      tags:
      - user
  /api/v1/users/auth:
    post:
      consumes:
      - application/json
      description: User Login
      parameters:
      - description: Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/example_feat.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Success'
            - properties:
                data:
                  $ref: '#/definitions/example_feat.UserLoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Login
      tags:
      - user
securityDefinitions:
  Authorization:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
